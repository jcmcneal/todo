{"version":3,"sources":["scripts/app.js"],"names":["angular","module","tasksApi","$resource","api_host","id","query","method","isArray","update","$inject","factory","acmeTasks","TasksController","moment","addNewTask","newTask","title","tasks","taskInput","created_at","priority","save","data","this","relativeDate","creationDate","fromNow","changePriority","formatCreatedDate","date","getPriorityClass","getTasks","tasksResponse","$promise","then","response","remove","submit","updateCompleted","completed","directive","restrict","templateUrl","scope","controller","controllerAs","bindToController","acmeMalarkey","malarkey","linkFunc","el","watcher","typist","typeSpeed","deleteSpeed","pauseDelay","loop","postfix","addClass","forEach","extraValues","value","type","pause","$on","MalarkeyController","template","link","MainController","routerConfig","$stateProvider","$urlRouterProvider","state","url","otherwise","config","constant","$logProvider","debugEnabled","run","$templateCache","put"],"mappings":"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","file":"scripts/app-6510d16040.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('todo', ['ngAnimate', 'ngCookies', 'ngTouch', 'ngSanitize', 'ngMessages', 'ngAria', 'ngResource', 'ui.router', 'ui.bootstrap']);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('todo')\n    .factory('tasksApi', tasksApi);\n\n  /** @ngInject */\n  function tasksApi($resource) {\n    // var api_host = 'http://api.todo.dev';\n    var api_host = 'http://api.storelodge.com';\n    return $resource(api_host+'/tasks/:id', {id:'@id'},{\n      'query': {method: 'GET', isArray: false },\n      'update': {method: 'PUT'}\n    });\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('todo')\n    .directive('acmeTasks', acmeTasks);\n\n  /** @ngInject */\n  function acmeTasks() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/tasks/tasks.html',\n      scope: {\n          creationDate: '='\n      },\n      controller: TasksController,\n      controllerAs: 'tasks',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function TasksController(moment, tasksApi) {\n      var tasks = this;\n      tasks.data = [];\n      tasks.taskInput;\n\n      tasks.relativeDate = moment(tasks.creationDate).fromNow();\n\n      tasks.changePriority = function(id) {\n        var priority = tasks.data[id].priority++;\n        priority++;\n        priority = priority > 3 ? 1 : priority;\n        tasks.data[id].priority = priority;\n        // Update Remotely\n        tasksApi.update({id:id},{priority:priority});\n      }\n      // Format Date Since Created\n      tasks.formatCreatedDate = function(date) {\n        return moment(date).fromNow();\n      }\n      tasks.getPriorityClass = function(priority) {\n        return 'priority-'+priority;\n      }\n      // Get Tasks\n      tasks.getTasks = function() {\n        var tasksResponse = tasksApi.query();\n        tasksResponse.$promise.then(function(response){\n          tasks.data = response;\n        });\n      }\n      // Removes Task\n      tasks.remove = function(id) {\n        // Remove Locally\n        delete tasks.data[id];\n        // Remove Remotely\n        tasksApi.remove({ id: id });\n      }\n      // Handles new task when submitted\n      tasks.submit = function() {\n        addNewTask();\n      }\n      tasks.updateCompleted = function(id) {\n        var completed = tasks.data[id].completed ? 0 : 1;\n        tasks.data[id].completed = completed;\n        tasksApi.update({id:id},{completed:tasks.data[id].completed});\n      }\n\n      function addNewTask() {\n        var newTask = {\n          'title': tasks.taskInput,\n          'created_at': moment(),\n          'priority': 1\n        }\n        // Save to database\n        tasksApi.save(newTask,function(data) {\n          newTask.id = data.id;\n          tasks.data[data.id] = newTask;\n        });\n        // Clear Input\n        tasks.taskInput = '';\n      }\n      // Get Tasks on load\n      tasks.getTasks();\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('todo')\n    .directive('acmeMalarkey', acmeMalarkey);\n\n  /** @ngInject */\n  function acmeMalarkey(malarkey) {\n    var directive = {\n      restrict: 'E',\n      scope: {\n        extraValues: '='\n      },\n      template: '',\n      link: linkFunc,\n      controller: MalarkeyController,\n      controllerAs: 'vm'\n    };\n\n    return directive;\n\n    function linkFunc(scope, el) {\n      var watcher;\n      var typist = malarkey(el[0], {\n        typeSpeed: 40,\n        deleteSpeed: 40,\n        pauseDelay: 9000,\n        loop: true,\n        postfix: ''\n      });\n\n      el.addClass('acme-malarkey');\n\n      angular.forEach(scope.extraValues, function(value) {\n        typist.type(value).pause().delete();\n      });\n\n      // watcher = scope.$watch('vm.contributors', function() {\n      //   angular.forEach(vm.contributors, function(contributor) {\n      //     typist.type(contributor.login).pause().delete();\n      //   });\n      // });\n\n      scope.$on('$destroy', function () {\n        watcher();\n      });\n    }\n\n    /** @ngInject */\n    function MalarkeyController() {\n      // var vm = this;\n\n      // vm.contributors = [];\n\n    //   activate();\n\n    //   function activate() {\n    //     return getTasks().then(function() {\n    //       //$log.info('Activated Contributors View');\n    //     });\n    //   }\n\n    //   function getTasks() {\n    //     return tasksApi.getTasks().then(function(data) {\n    //       vm.contributors = data;\n\n    //       return vm.contributors;\n    //     });\n    //   }\n    }\n\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('todo')\n    .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController() {\n\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('todo')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n      .state('home', {\n        url: '',\n        templateUrl: 'app/main/main.html',\n        controller: 'MainController',\n        controllerAs: 'main'\n      });\n\n    $urlRouterProvider.otherwise('/');\n  }\n\n})();\n\n/* global malarkey:false, moment:false */\n(function() {\n  'use strict';\n\n  angular\n    .module('todo')\n    .constant('malarkey', malarkey)\n    .constant('moment', moment);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('todo')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Set options third-party lib\n    // toastrConfig.allowHtml = true;\n    // toastrConfig.timeOut = 3000;\n    // toastrConfig.positionClass = 'toast-top-right';\n    // toastrConfig.preventDuplicates = true;\n    // toastrConfig.progressBar = true;\n  }\n\n})();\n\nangular.module(\"todo\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/main/main.html\",\"<div class=container><div class=row><div class=\\\"title-wrapper text-center col-xs-12\\\"><h1 class=site-title><acme-malarkey extra-values=\\\"[\\'Tasks\\', \\'Todo\\', \\'Planner\\',\\'Lists\\']\\\"></acme-malarkey></h1></div></div><div class=row><div class=\\\"col-xs-12 col-md-10 col-md-offset-1\\\"><!-- Tasks Component --><acme-tasks></acme-tasks></div></div></div>\");\n$templateCache.put(\"app/components/tasks/tasks.html\",\"<div class=form-group><form ng-submit=tasks.submit()><input type=text name=\\\"\\\" autocomplete=off id=input class=\\\"form-control large\\\" title=\\\"Insert a task here!\\\" placeholder=\\\"Type your task here and hit enter\\\" ng-model=tasks.taskInput></form></div><div ng-repeat=\\\"task in tasks.data\\\" class=\\\"task-item task-item-info\\\" ng-class=\\\"{completed: task.completed}\\\"><div class=callout-body><button type=button class=close aria-label=Close ng-click=tasks.remove(task.id)><span aria-hidden=true>&times;</span></button><div class=priority-box ng-click=tasks.changePriority(task.id) ng-class=tasks.getPriorityClass(task.priority)>&nbsp;</div><h4><div><label><input type=checkbox ng-checked=task.completed ng-click=tasks.updateCompleted(task.id)> <span class=title>{{task.title}}</span></label></div></h4><footer>Created {{ tasks.formatCreatedDate(task.login) || tasks.formatCreatedDate(task.created_at) }}</footer></div></div>\");}]);"],"sourceRoot":"/source/"}